# -------------------------------------------------
# This workflow runs Parasoft Jtest analysis with selected build tool
# -------------------------------------------------
# Prerequisites:
# 1. Set up the Jtest license and other settings in jtestcli.properties in the Jtest installation directory.
name: Parasoft Jtest

# Define when the action will run. 
on:
  
  # Triggers the workflow on push or pull request events
  # push:
  #   branches: [ main ]

  # Allows to run workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  jtest:
    name: Run Parasoft Jtest
    # The type of runner that the job will run on
    runs-on: self-hosted
    env:
      VARNAME: demo-project
    
    steps:
      - run: echo $env:VARNAME

      - name: Checkout repository
        uses: actions/checkout@v2

      # Run static analysis
      # TODO: describe how configure tool to produce SARIF
      - name: Run static analysis
        # -------------------------------------------------
        # Configure working directory if it is different than repository root
        working-directory: $env:VARNAME
         
        # -------------------------------------------------
        # Running with Maven
        # Prerequisites:
        # 1. Configure your Maven setup by following the Jtest User Guide:
        # https://docs.parasoft.com/display/JTEST20202/Configuring+the+Jtest+Plugin+for+Maven
        # -------------------------------------------------
        # Uncomment the following to run the "Recommended Rules" test configuration:
        run: mvn jtest:jtest
        # or uncomment the following to run the specified test configuration:
        # run: mvn clean jtest:jtest -Djtest.config="builtin://Recommended Rules"
        
        # TODO: remove if not needed
        # uses: XtestPL/action-examples@v1
        # with:
        #   build-system: 'maven'
        #   build-system-args: --file demo-project/pom.xml
        #   jtest-args: -report demo-project/jtest-output
        
      # -------------------------------------------------
      # Archive the findings reports as job artifact
      - name: Upload report artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Report files
          path: demo-project/target/jtest/report.*
          # |
          #   demo-project/target/jtest/report.html
          #   demo-project/target/jtest/report.pdf
          #   demo-project/target/jtest/report.sarif
      
      # -------------------------------------------------
      # Upload the findings into the GitHub code scanning alert section
      # - uses: github/codeql-action/upload-sarif@v1
      #  with:
      #    sarif_file: demo-project/target/jtest/report.sarif 
      #- TODO: PRODUCE JSON with SARIF FORMAT
