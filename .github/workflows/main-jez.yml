# This is a basic workflow to help you get started with Actions

name: Parasoft Jtest

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    env:
      PROJECT_DIR: demo-project

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      # Runs static analysis and produces SARIF
      - run: echo proj $env:ROJECT_DIR
      - run: cd $PROJECT_DIR
      - name: Run static analysis
        run: mvn jtest:jtest
        working-directory: demo-project

        #working-directory: $PROJECT_DIR
        #run: mvn clean --file demo-project/pom.xml test-compile jtest:agent test jtest:jtest -D'jtest.config'="builtin://Recommended Rules"
        # uses: XtestPL/action-examples@v1
        # with:
        #   build-system: 'maven'
        #   build-system-args: --file demo-project/pom.xml
        #   jtest-args: -report demo-project/jtest-output
      # Archives the findings reports as artifact
      - uses: actions/upload-artifact@v2
        with:
          name: Upload report artifacts
          path: |
            $PROJECT_DIR/target/jtest/report.html
            $PROJECT_DIR/target/jtest/report.pdf
            
#      # Uploads the findings into the GitHub code scanning alert section using the upload-sarif action
#      - uses: github/codeql-action/upload-sarif@v1
#        with:
#          sarif_file: demo-project/jtest-output/report.sarif #- TODO: PRODUCE JSON with SARIF FORMAT
